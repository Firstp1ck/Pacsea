searchState.loadedDescShard("Pacsea", 0, "Pacsea TUI entry point and orchestration.\nContains the error value\nContains the success value\nConvenient crate-wide <code>Result</code> alias with a thread-safe …\nEvent handling layer for Pacsea’s TUI.\nOfficial package index management, persistence, and …\nInstallation command construction and launching utilities.\nInteraction logic for selection movement, search …\nTokio entry point.\nIf the details cache was modified, serialize and persist …\nIf the Install list was modified, serialize and persist it …\nIf the Recent list was modified, serialize and persist it …\nDebounced saver for the current input into the Recent list.\nNetwork and system data retrieval for package metadata.\nRestore the terminal after the TUI exits by leaving the …\nRun the TUI application with the given flags.\nPut the terminal into raw mode and switch to the alternate …\nCore application state types for Pacsea’s TUI.\nColor palette definitions for Pacsea’s TUI.\nTUI rendering for Pacsea.\nUI helper utilities for formatting and pane-specific …\nSmall utility helpers for encoding, JSON extraction, …\nAdvance selection in the Install pane to the next or …\nAdvance selection in the Recent pane to the next or …\nDispatch a single input event, mutating <code>AppState</code> and …\nEnsure <code>app.details</code> reflects the currently selected result.\nProcess-wide set of installed package names.\nProcess-wide holder for the official index state.\nIn-memory representation of the persisted official package …\nMinimal, serializable record for a package in the official …\nReturn the entire official index as a list of <code>PackageItem</code>s.\nEnsure the official index is populated (fetching if …\nFetch a minimal list of official packages using <code>pacman -Sl</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to the global <code>OfficialIndex</code> lock, …\nGet a reference to the global installed-name set lock, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nQuery whether <code>name</code> appears in the cached set of installed …\nLoad the official index from <code>path</code> if a valid JSON exists.\nRefresh the process-wide cache of installed package names …\nRequest enrichment (<code>pacman -Si</code>) for a set of package <code>names</code> …\nPersist the current official index to <code>path</code> as JSON.\nSearch the official index for packages whose names contain …\nSpawn a background task to refresh the official index and …\nBuild a shell command to install <code>item</code> and indicate whether …\nCheck whether <code>cmd</code> exists on the current <code>PATH</code>.\nAppend installed package names with a timestamp to …\nSpawn a new terminal to install a single <code>PackageItem</code> on …\nSpawn a single terminal to install multiple <code>PackageItem</code>s …\nAdd a <code>PackageItem</code> to the install list if it is not already …\nLazily-initialized global set of package names that are …\nReturns whether details loading is currently allowed for …\nMove the selection by <code>delta</code> and update cached details and …\nPrefetch details for items near the current selection, …\nSend the current query text over the search channel with a …\nRestrict details loading to only the currently selected …\nAllow details loading for a “ring” around the current …\nContains the error value\nContains the success value\nConvenient <code>Result</code> alias for network/detail fetching …\nExecute <code>curl</code> with strict flags and parse the response as …\nFetch AUR search results for a name query and report any …\nFetch details for an AUR package using AUR RPC v5 <code>info</code> …\nFetch details for a <code>PackageItem</code> based on its <code>Source</code>.\nFetch details for an official package.\nRun <code>pacman -Si</code> for an official package and parse …\nParse a human-readable size string like “3.44 MiB” …\nInformational alert with a non-interactive message.\nGlobal application state shared by the event, networking, …\nAUR package.\nConfirmation dialog for installing the given items.\nWhich UI pane currently has keyboard focus.\nRight pane: pending install list.\nModal dialog state for the UI.\nOfficial repository package and its associated repository …\nFull set of details for a package, suitable for a …\nMinimal package summary used in lists and search results.\nSearch query sent to the background search worker.\nLeft pane: recent queries list.\nCenter pane: search input and results.\nResults corresponding to a prior <code>QueryInput</code>.\nPackage source origin.\nTarget architecture.\nBuild or packaging date (string-formatted for display).\nDirty flag indicating <code>details_cache</code> needs to be saved.\nPath where the details cache is persisted as JSON.\nConflicting packages.\nConstruct a default, empty <code>AppState</code>, initializing paths, …\nRequired dependencies.\nOne-line description suitable for list display.\nLong description.\nDetails for the currently highlighted result.\nCache of details keyed by package name.\nName of the package whose details are being emphasized in …\nDownload size in bytes, if available.\nIf <code>true</code>, show install steps without executing side effects.\nWhich pane is currently focused.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroup memberships.\nList selection state for the Recent pane.\nMonotonic identifier used to correlate responses.\nEchoed identifier from the originating query.\nCurrent search input text.\nDirty flag indicating <code>install_list</code> needs to be saved.\nPackages selected for installation.\nPath where the install list is persisted as JSON.\nInstalled size in bytes, if available.\nList selection state for the Install pane.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatching packages in rank order.\nTimestamp of the last input edit, used for debouncing or …\nLast value persisted for the input field, to avoid …\nIdentifier of the latest query whose results are being …\nSPDX or human-readable license identifiers.\nList selection state for the search results list.\nWhether the application is currently generating the …\nActive modal dialog, if any.\nCanonical package name.\nPackage name.\nWhether a ring prefetch is needed soon.\nNext query identifier to allocate.\nPath to the persisted official package index used for fast …\nOptional dependencies with annotations.\nPackages for which this package is optional.\nPackager or maintainer name.\nOptional, transient find pattern used by pane-local search …\nVirtual provisions supplied by this package.\nPreviously executed queries.\nDirty flag indicating <code>recent</code> needs to be saved.\nPath where recent searches are persisted as JSON.\nPackages that this package replaces.\nRepository name (e.g., “extra”).\nPackages that require this package.\nCurrent search results, most relevant first.\nTimestamp at which to resume ring prefetching, if paused.\nSmooth scrolling accumulator for prefetch heuristics.\nIndex into <code>results</code> that is currently highlighted.\nOrigin of the package (official repo or AUR).\nRaw query text entered by the user.\nUpstream project URL (may be empty if unknown).\nRectangle of the clickable URL button in terminal cell …\nVersion string as reported by the source.\nFull version string.\nApplication theme palette used by rendering code.\nPrimary background color for the canvas.\nDarkest background shade for deep contrast areas.\nReturns the argument unchanged.\nSuccess/positive state color.\nConstruct a <code>Color::Rgb</code> from an 8-bit RGB triplet.\nCalls <code>U::from(self)</code>.\nAccent color for subtle emphasis and borders.\nSlightly lighter background layer used behind panels.\nAccent color for emphasized headings or selections.\nMuted overlay line/border color (primary).\nMuted overlay line/border color (secondary).\nError/danger state color.\nAccent color commonly used for selection and interactive …\nSecondary text for less prominent content.\nTertiary text for captions and low-emphasis content.\nSubtle surface color for component backgrounds (level 1).\nSubtle surface color for component backgrounds (level 2).\nPrimary foreground text color.\nReturn the application’s default theme palette.\nWarning/attention state color.\nRender a full frame of the Pacsea TUI.\nResolve a free-form query string to a best-effort matching …\nProduce the list of visible indices into <code>app.install_list</code>, …\nProduce the list of visible indices into <code>app.recent</code>, …\nConvert a byte count to a concise human-readable string …\nJoin a list of strings into a comma-separated value.\nTrigger an asynchronous preview fetch for the currently …\nExtract an array of strings from a JSON object by trying …\nLeap year predicate for the proleptic Gregorian calendar.\nRank how well a package name matches a query (lower is …\nPercent-encode a string for use in URLs.\nDetermine ordering weight for a package source.\nExtract a string value from a JSON object by key, …\nExtract the first available string from a list of …\nConvert an optional Unix timestamp (seconds) to a UTC …\nExtract an unsigned 64-bit integer by trying multiple keys …")